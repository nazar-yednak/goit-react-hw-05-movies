{"version":3,"file":"static/js/871.869fe71d.chunk.js","mappings":"4TACMA,EAAM,mCAGNC,EAAW,sCAGJC,EAAS,mCAAG,WAAMC,GAAN,uFACAC,IAAAA,IAAA,UANR,kDAMQ,oBAAiCJ,EAAjC,iBAA6CG,IAD7C,cACjBE,EADiB,yBAGhBA,EAASC,MAHO,2CAAH,sDAMTC,EAAY,mCAAG,8FAASC,EAAT,EAASA,OAAT,SACHJ,IAAAA,IAAA,UAXN,4CAWM,oBACIJ,EADJ,kBACiBQ,IAFd,cACpBH,EADoB,yBAKnBA,EAASC,MALU,2CAAH,sDAQZG,EAAU,mCAAG,WAAMC,GAAN,uFACDN,IAAAA,IAAA,UAAaH,EAAb,YAAyBS,EAAzB,oBAA4CV,IAD3C,cAClBK,EADkB,yBAGjBA,EAASC,MAHQ,2CAAH,sDAMVK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,IAAAA,IAAA,UAClBH,EADkB,YACNS,EADM,4BACqBV,IAFlB,cACpBK,EADoB,yBAKnBA,EAASC,KAAKM,MALK,2CAAH,sDAQZC,EAAc,mCAAG,WAAMH,GAAN,uFACLN,IAAAA,IAAA,UAClBH,EADkB,YACNS,EADM,4BACqBV,EADrB,2BADK,cACtBK,EADsB,yBAKrBA,EAASC,KAAKQ,SALO,2CAAH,qD,kFCA3B,UAhCgB,WACd,IAAQJ,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAZAC,EAAAA,EAAAA,YAAU,YACY,WAClB,KACEN,EAAAA,EAAAA,IAAeH,GAASU,KAAKF,EAG9B,CAFC,MAAOG,GACPC,QAAQC,IAAIF,EACb,CACF,CAEDG,EACD,GAAE,CAACd,KAGF,yBACGO,EAAQQ,OAAS,EAChBR,EAAQS,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,2BACE,0CAAgBD,MAChB,uBAAIC,MAFGF,EAKZ,KAED,qEAIP,C","sources":["API/API.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = 'f1ede884e56fe0f7b64d4165e0e8bda7';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst ID_MOVIE = 'https://api.themoviedb.org/3/movie/';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport const getMovies = async page => {\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}&page=${page}`);\n\n  return response.data;\n};\n\nexport const searchMovies = async ({ search }) => {\n  const response = await axios.get(\n    `${SEARCH_URL}?api_key=${KEY}&query=${search}`\n  );\n\n  return response.data;\n};\n\nexport const getIdMovie = async movieId => {\n  const response = await axios.get(`${ID_MOVIE}/${movieId}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const getCastMovie = async movieId => {\n  const response = await axios.get(\n    `${ID_MOVIE}/${movieId}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n};\n\nexport const getRevievMovie = async movieId => {\n  const response = await axios.get(\n    `${ID_MOVIE}/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n","import { getRevievMovie } from 'API/API';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    const searchMovie = () => {\n      try {\n        getRevievMovie(movieId).then(setReviews);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    searchMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length > 0 ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <h3>{`Author: ${author}`}</h3>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p>We don`t have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["KEY","ID_MOVIE","getMovies","page","axios","response","data","searchMovies","search","getIdMovie","movieId","getCastMovie","cast","getRevievMovie","results","useParams","useState","reviews","setReviews","useEffect","then","error","console","log","searchMovie","length","map","id","author","content"],"sourceRoot":""}