{"version":3,"file":"static/js/257.95b54bcf.chunk.js","mappings":"4TACMA,EAAM,mCAGNC,EAAW,sCAGJC,EAAS,mCAAG,WAAMC,GAAN,uFACAC,IAAAA,IAAA,UANR,kDAMQ,oBAAiCJ,EAAjC,iBAA6CG,IAD7C,cACjBE,EADiB,yBAGhBA,EAASC,MAHO,2CAAH,sDAMTC,EAAY,mCAAG,8FAASC,EAAT,EAASA,OAAT,SACHJ,IAAAA,IAAA,UAXN,4CAWM,oBACIJ,EADJ,kBACiBQ,IAFd,cACpBH,EADoB,yBAKnBA,EAASC,MALU,2CAAH,sDAQZG,EAAU,mCAAG,WAAMC,GAAN,uFACDN,IAAAA,IAAA,UAAaH,EAAb,YAAyBS,EAAzB,oBAA4CV,IAD3C,cAClBK,EADkB,yBAGjBA,EAASC,MAHQ,2CAAH,sDAMVK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,IAAAA,IAAA,UAClBH,EADkB,YACNS,EADM,4BACqBV,IAFlB,cACpBK,EADoB,yBAKnBA,EAASC,KAAKM,MALK,2CAAH,sDAQZC,EAAc,mCAAG,WAAMH,GAAN,uFACLN,IAAAA,IAAA,UAClBH,EADkB,YACNS,EADM,4BACqBV,EADrB,2BADK,cACtBK,EADsB,yBAKrBA,EAASC,KAAKQ,SALO,2CAAH,qD,oLCjCdC,EAAaC,EAAAA,GAAAA,OAAH,ybAmBVC,EAAYD,EAAAA,GAAAA,IAAH,0CAGTE,EAAmBF,EAAAA,GAAAA,IAAH,8EAIhBG,EAAQH,EAAAA,GAAAA,GAAH,qFAKLI,EAAaJ,EAAAA,GAAAA,EAAH,qFAKVK,EAAYL,EAAAA,GAAAA,GAAH,qF,SC+CtB,EApEqB,WAAO,IAAD,IACzB,GAA0BM,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQd,GAAYe,EAAAA,EAAAA,MAAZf,QACFgB,GAAWC,EAAAA,EAAAA,MACTC,EAASF,EAASG,MAAlBD,KACFE,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,GAAKtB,EAAL,CAGA,IAAMuB,EAAW,mCAAG,8GAEKxB,EAAAA,EAAAA,IAAWC,GAFhB,OAEVwB,EAFU,OAIhBV,EAASU,GAJO,gDAMhBC,QAAQC,IAAR,MANgB,yDAAH,qDASjBH,GAVC,CAWF,GAAE,CAACvB,KAGF,8BACGa,IACC,4BACE,SAACR,EAAD,CAAYsB,KAAK,SAASC,QArBnB,kBAAMR,EAASJ,EAASG,MAAMD,KAA9B,EAqBP,sBAGA,UAACX,EAAD,YACE,8BACyBsB,IAAtBhB,EAAMiB,aACL,gBACEC,IAAG,0CAAqClB,EAAMiB,aAC9CE,IAAKnB,EAAMoB,QAGb,OAGJ,UAACzB,EAAD,YACE,UAACC,EAAD,WACGI,EAAMoB,MADT,YACkBpB,QADlB,IACkBA,GADlB,UACkBA,EAAOqB,oBADzB,aACkB,EAAqBC,MAAM,EAAG,GADhD,QAGA,yCAAsC,GAArBtB,EAAMuB,cAAmBC,QAAQ,GAAlD,QACA,SAAC1B,EAAD,wBACA,uBAAIE,EAAMyB,YACV,SAAC5B,EAAD,iBACGG,QADH,IACGA,GADH,UACGA,EAAO0B,cADV,aACG,EAAeC,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,cAInD,mBACA,mDACA,SAAC,KAAD,CAASvB,MAAO,CAAED,KAAAA,GAAQyB,GAAE,OAA5B,mBAGA,mBACA,SAAC,KAAD,CAASxB,MAAO,CAAED,KAAAA,GAAQyB,GAAE,UAA5B,sBAGA,SAAC,KAAD,QAKT,C","sources":["API/API.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = 'f1ede884e56fe0f7b64d4165e0e8bda7';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst ID_MOVIE = 'https://api.themoviedb.org/3/movie/';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport const getMovies = async page => {\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}&page=${page}`);\n\n  return response.data;\n};\n\nexport const searchMovies = async ({ search }) => {\n  const response = await axios.get(\n    `${SEARCH_URL}?api_key=${KEY}&query=${search}`\n  );\n\n  return response.data;\n};\n\nexport const getIdMovie = async movieId => {\n  const response = await axios.get(`${ID_MOVIE}/${movieId}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const getCastMovie = async movieId => {\n  const response = await axios.get(\n    `${ID_MOVIE}/${movieId}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n};\n\nexport const getRevievMovie = async movieId => {\n  const response = await axios.get(\n    `${ID_MOVIE}/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const ButtonBack = styled.button`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\nexport const Container = styled.div`\n  display: flex;\n`;\nexport const ContainerDetails = styled.div`\n  margin-left: 15px;\n  background-color: #f6eeee66;\n`;\nexport const Title = styled.h2`\n  color: black;\n  font-style: normal;\n  font-weight: 700;\n`;\nexport const GenresText = styled.p`\n  color: black;\n  font-style: normal;\n  font-weight: 700;\n`;\nexport const TitleOver = styled.h3`\n  color: black;\n  font-style: normal;\n  font-weight: 500;\n`;\n","import { useState, useEffect } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { getIdMovie } from '../../API/API';\nimport {\n  ButtonBack,\n  Container,\n  ContainerDetails,\n  Title,\n  GenresText,\n  TitleOver,\n} from './MovieDetails.styled';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const { from } = location.state;\n  const navigate = useNavigate();\n  const goBack = () => navigate(location.state.from);\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const fetchMovies = async () => {\n      try {\n        const result = await getIdMovie(movieId);\n\n        setMovie(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <div>\n          <ButtonBack type=\"button\" onClick={goBack}>\n            Go back\n          </ButtonBack>\n          <Container>\n            <div>\n              {movie.poster_path !== undefined ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w342/${movie.poster_path}`}\n                  alt={movie.title}\n                />\n              ) : (\n                ' '\n              )}\n            </div>\n            <ContainerDetails>\n              <Title>\n                {movie.title} ({movie?.release_date?.slice(0, 4)})\n              </Title>\n              <p>User score: {(movie.vote_average * 10).toFixed(0)}%</p>\n              <TitleOver>Overview</TitleOver>\n              <p>{movie.overview}</p>\n              <GenresText>\n                {movie?.genres?.map(({ name }) => name).join(' ')}\n              </GenresText>\n            </ContainerDetails>\n          </Container>\n          <hr></hr>\n          <p>Additional information</p>\n          <NavLink state={{ from }} to={`cast`}>\n            Cast\n          </NavLink>\n          <br></br>\n          <NavLink state={{ from }} to={`reviews`}>\n            Reviews\n          </NavLink>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["KEY","ID_MOVIE","getMovies","page","axios","response","data","searchMovies","search","getIdMovie","movieId","getCastMovie","cast","getRevievMovie","results","ButtonBack","styled","Container","ContainerDetails","Title","GenresText","TitleOver","useState","movie","setMovie","useParams","location","useLocation","from","state","navigate","useNavigate","useEffect","fetchMovies","result","console","log","type","onClick","undefined","poster_path","src","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","name","join","to"],"sourceRoot":""}