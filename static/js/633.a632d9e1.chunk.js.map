{"version":3,"file":"static/js/633.a632d9e1.chunk.js","mappings":"4TACMA,EAAM,mCAGNC,EAAW,sCAGJC,EAAS,mCAAG,WAAMC,GAAN,uFACAC,IAAAA,IAAA,UANR,kDAMQ,oBAAiCJ,EAAjC,iBAA6CG,IAD7C,cACjBE,EADiB,yBAGhBA,EAASC,MAHO,2CAAH,sDAMTC,EAAY,mCAAG,8FAASC,EAAT,EAASA,OAAT,SACHJ,IAAAA,IAAA,UAXN,4CAWM,oBACIJ,EADJ,kBACiBQ,IAFd,cACpBH,EADoB,yBAKnBA,EAASC,MALU,2CAAH,sDAQZG,EAAU,mCAAG,WAAMC,GAAN,uFACDN,IAAAA,IAAA,UAAaH,EAAb,YAAyBS,EAAzB,oBAA4CV,IAD3C,cAClBK,EADkB,yBAGjBA,EAASC,MAHQ,2CAAH,sDAMVK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,IAAAA,IAAA,UAClBH,EADkB,YACNS,EADM,4BACqBV,IAFlB,cACpBK,EADoB,yBAKnBA,EAASC,KAAKM,MALK,2CAAH,sDAQZC,EAAc,mCAAG,WAAMH,GAAN,uFACLN,IAAAA,IAAA,UAClBH,EADkB,YACNS,EADM,4BACqBV,EADrB,2BADK,cACtBK,EADsB,yBAKrBA,EAASC,KAAKQ,SALO,2CAAH,qD,oICjCdC,EAAQC,EAAAA,GAAAA,GAAH,sEAKLC,EAAUD,EAAAA,GAAAA,IAAH,uE,GAICA,EAAAA,GAAAA,IAAH,wC,kBCTLE,EAAmBF,EAAAA,GAAAA,IAAH,2UAchBG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,oIAOTK,EAAQL,EAAAA,GAAAA,IAAH,gN,SCQlB,EA1BsB,SAAC,GAAgB,IAAdM,EAAa,EAAbA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,UAACT,EAAD,CAAoBU,MAAO,CAAEC,KAAMP,GAAYQ,GAAE,iBAAYL,GAA7D,WACE,SAAC,EAAD,CACEM,IAAG,0CAAqCJ,GACxCK,IAAKN,IAENA,IALaD,EADN,KAWjB,ECYD,EA1Ba,WACX,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAeA,OAZAC,EAAAA,EAAAA,YAAU,YACY,WAClB,KACElC,EAAAA,EAAAA,IALO,GAKSmC,MAAK,SAAAC,GAAG,OAAIH,EAAUG,EAAIxB,QAAlB,GAGzB,CAFC,MAAOyB,GACPC,QAAQC,IAAIF,EACb,CACF,CAEDG,EACD,GAAE,CAZU,KAeX,iCACE,SAAC3B,EAAD,8BACA,SAACE,EAAD,UACGK,EAAOqB,OAAS,IAAK,SAAC,EAAD,CAAerB,OAAQA,QAIpD,C","sources":["API/API.js","pages/Home/Home.styled.jsx","components/MoviesGalerry/MoviesGalerry.styled.jsx","components/MoviesGalerry/MoviesGalerry.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = 'f1ede884e56fe0f7b64d4165e0e8bda7';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst ID_MOVIE = 'https://api.themoviedb.org/3/movie/';\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\nexport const getMovies = async page => {\n  const response = await axios.get(`${BASE_URL}?api_key=${KEY}&page=${page}`);\n\n  return response.data;\n};\n\nexport const searchMovies = async ({ search }) => {\n  const response = await axios.get(\n    `${SEARCH_URL}?api_key=${KEY}&query=${search}`\n  );\n\n  return response.data;\n};\n\nexport const getIdMovie = async movieId => {\n  const response = await axios.get(`${ID_MOVIE}/${movieId}?api_key=${KEY}`);\n\n  return response.data;\n};\n\nexport const getCastMovie = async movieId => {\n  const response = await axios.get(\n    `${ID_MOVIE}/${movieId}/credits?api_key=${KEY}`\n  );\n\n  return response.data.cast;\n};\n\nexport const getRevievMovie = async movieId => {\n  const response = await axios.get(\n    `${ID_MOVIE}/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: block;\n  justify-content: center;\n`;\nexport const Image = styled.img`\n  height: 15%;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const GalleryContainer = styled.div`\n  display: grid;\n  justify-content: center;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px; ;\n`;\nexport const LinkMovie = styled(Link)`\n  color: black;\n  font-style: normal;\n  font-weight: 500;\n  list-style: none;\n  text-decoration: none;\n`;\nexport const Image = styled.img`\n  width: 100%;\n  height: 95%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { GalleryContainer, LinkMovie, Image } from './MoviesGalerry.styled';\n\nconst MoviesGalerry = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <GalleryContainer>\n      {movies.map(({ id, title, poster_path }) => (\n        <LinkMovie key={id} state={{ from: location }} to={`movies/${id}`}>\n          <Image\n            src={`https://image.tmdb.org/t/p/w342/${poster_path}`}\n            alt={title}\n          />\n          {title}\n        </LinkMovie>\n      ))}\n    </GalleryContainer>\n  );\n};\n\nMoviesGalerry.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default MoviesGalerry;\n","import { useState, useEffect } from 'react';\n// import { useLocation } from 'react-router-dom';\nimport { getMovies } from '../../API/API';\nimport { Wrapper, Title } from './Home.styled';\nimport MoviesGalerry from '../../components/MoviesGalerry/MoviesGalerry';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const page = 1;\n\n  useEffect(() => {\n    const fetchMovies = () => {\n      try {\n        getMovies(page).then(res => setMovies(res.results));\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovies();\n  }, [page]);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      <Wrapper>\n        {movies.length > 0 && <MoviesGalerry movies={movies} />}\n      </Wrapper>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["KEY","ID_MOVIE","getMovies","page","axios","response","data","searchMovies","search","getIdMovie","movieId","getCastMovie","cast","getRevievMovie","results","Title","styled","Wrapper","GalleryContainer","LinkMovie","Link","Image","movies","location","useLocation","map","id","title","poster_path","state","from","to","src","alt","useState","setMovies","useEffect","then","res","error","console","log","fetchMovies","length"],"sourceRoot":""}